-- MySQL Script generated by MySQL Workbench
-- Fri Sep 27 10:35:47 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema cadastro_imoveis
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema cadastro_imoveis
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `cadastro_imoveis` DEFAULT CHARACTER SET utf8 ;
USE `cadastro_imoveis` ;

-- -----------------------------------------------------
-- Table `cadastro_imoveis`.`grupo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cadastro_imoveis`.`grupo` ;

CREATE TABLE IF NOT EXISTS `cadastro_imoveis`.`grupo` (
  `codigo_gru` INT NOT NULL AUTO_INCREMENT,
  `nome_gru` VARCHAR(45) NULL,
  `ativo_gru` TINYINT(1) NULL,
  `descricao_gru` VARCHAR(255) NULL,
  PRIMARY KEY (`codigo_gru`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cadastro_imoveis`.`usuario`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cadastro_imoveis`.`usuario` ;

CREATE TABLE IF NOT EXISTS `cadastro_imoveis`.`usuario` (
  `codigo_usu` INT NOT NULL AUTO_INCREMENT,
  `email_usu` VARCHAR(150) NULL,
  `login_usu` VARCHAR(100) NULL,
  `nome_usu` VARCHAR(150) NULL,
  `senha_usu` VARCHAR(150) NULL,
  `funcao_usu` INT NULL COMMENT '1 - desenvolvimento;\n2 - administrativo;\n3 - gerencias;\n4 - atendimentos;',
  `ativo_usu` INT NULL,
  `codigo_gru` INT NULL,
  PRIMARY KEY (`codigo_usu`),
  INDEX `FK_usuario_grupo_idx` (`codigo_gru` ASC) VISIBLE,
  CONSTRAINT `FK_usuario_grupo`
    FOREIGN KEY (`codigo_gru`)
    REFERENCES `cadastro_imoveis`.`grupo` (`codigo_gru`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cadastro_imoveis`.`pais`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cadastro_imoveis`.`pais` ;

CREATE TABLE IF NOT EXISTS `cadastro_imoveis`.`pais` (
  `codigo_pai` INT NOT NULL AUTO_INCREMENT,
  `nome_pai` VARCHAR(50) NULL,
  `iso_3166_pai` VARCHAR(2) NULL,
  PRIMARY KEY (`codigo_pai`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cadastro_imoveis`.`estados`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cadastro_imoveis`.`estados` ;

CREATE TABLE IF NOT EXISTS `cadastro_imoveis`.`estados` (
  `codigo_est` INT NOT NULL AUTO_INCREMENT,
  `nome_est` VARCHAR(100) NULL,
  `uf_est` VARCHAR(45) NULL,
  `populacao_est` INT NULL,
  `site_est` VARCHAR(200) NULL,
  `fuso_est` VARCHAR(6) NULL,
  `iso_31662_est` VARCHAR(5) NULL,
  `codigo_pai` INT NOT NULL,
  PRIMARY KEY (`codigo_est`),
  INDEX `fk_estados_pais1_idx` (`codigo_pai` ASC) VISIBLE,
  CONSTRAINT `fk_estados_pais1`
    FOREIGN KEY (`codigo_pai`)
    REFERENCES `cadastro_imoveis`.`pais` (`codigo_pai`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cadastro_imoveis`.`cidades`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cadastro_imoveis`.`cidades` ;

CREATE TABLE IF NOT EXISTS `cadastro_imoveis`.`cidades` (
  `codigo_cid` INT NOT NULL AUTO_INCREMENT,
  `nome_cid` VARCHAR(200) NULL,
  `capital_cid` INT NULL,
  `fundacao_cid` DATE NULL,
  `populacao_cid` INT NULL,
  `latitude_cid` FLOAT NULL,
  `longitude_cid` FLOAT NULL,
  `site_cid` VARCHAR(255) NULL,
  `ddd_cid` INT NULL,
  `codigo_est` INT NOT NULL,
  PRIMARY KEY (`codigo_cid`),
  INDEX `fk_cidades_estados_idx` (`codigo_est` ASC) VISIBLE,
  CONSTRAINT `fk_cidades_estados`
    FOREIGN KEY (`codigo_est`)
    REFERENCES `cadastro_imoveis`.`estados` (`codigo_est`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cadastro_imoveis`.`menu`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cadastro_imoveis`.`menu` ;

CREATE TABLE IF NOT EXISTS `cadastro_imoveis`.`menu` (
  `codigo_men` INT NOT NULL AUTO_INCREMENT,
  `nome_men` VARCHAR(45) NULL,
  `icone_men` VARCHAR(45) NULL,
  `link_men` VARCHAR(45) NULL,
  `ordem_men` INT NULL,
  PRIMARY KEY (`codigo_men`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cadastro_imoveis`.`paginas`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cadastro_imoveis`.`paginas` ;

CREATE TABLE IF NOT EXISTS `cadastro_imoveis`.`paginas` (
  `codigo_pag` INT NOT NULL AUTO_INCREMENT,
  `nome_pag` VARCHAR(255) NULL,
  `link_pag` VARCHAR(45) NULL,
  `codigo_men` INT NOT NULL,
  `ativo_pag` TINYINT(1) NULL,
  PRIMARY KEY (`codigo_pag`),
  INDEX `fk_paginas_menu1_idx` (`codigo_men` ASC) VISIBLE,
  CONSTRAINT `fk_paginas_menu1`
    FOREIGN KEY (`codigo_men`)
    REFERENCES `cadastro_imoveis`.`menu` (`codigo_men`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cadastro_imoveis`.`paginas_grupo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cadastro_imoveis`.`paginas_grupo` ;

CREATE TABLE IF NOT EXISTS `cadastro_imoveis`.`paginas_grupo` (
  `codigo_pag` INT NOT NULL,
  `codigo_gru` INT NOT NULL,
  `acesso` TINYINT(1) NULL,
  `inserir` TINYINT(1) NULL,
  `alterar` TINYINT(1) NULL,
  `detalhar` TINYINT(1) NULL,
  `excluir` TINYINT(1) NULL,
  `imprimir` TINYINT(1) NULL,
  `grafico` TINYINT(1) NULL,
  PRIMARY KEY (`codigo_pag`, `codigo_gru`),
  INDEX `fk_paginas_has_grupo_grupo1_idx` (`codigo_gru` ASC) VISIBLE,
  INDEX `fk_paginas_has_grupo_paginas1_idx` (`codigo_pag` ASC) VISIBLE,
  CONSTRAINT `fk_paginas_has_grupo_paginas1`
    FOREIGN KEY (`codigo_pag`)
    REFERENCES `cadastro_imoveis`.`paginas` (`codigo_pag`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_paginas_has_grupo_grupo1`
    FOREIGN KEY (`codigo_gru`)
    REFERENCES `cadastro_imoveis`.`grupo` (`codigo_gru`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cadastro_imoveis`.`ci_sessions`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cadastro_imoveis`.`ci_sessions` ;

CREATE TABLE IF NOT EXISTS `cadastro_imoveis`.`ci_sessions` (
  `id` VARCHAR(40) NULL,
  `ip_address` VARCHAR(45) NULL,
  `timestamp` INT(10) UNSIGNED NULL DEFAULT 0,
  `data` BLOB NULL)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cadastro_imoveis`.`pessoa`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cadastro_imoveis`.`pessoa` ;

CREATE TABLE IF NOT EXISTS `cadastro_imoveis`.`pessoa` (
  `codigo_pes` INT NOT NULL AUTO_INCREMENT,
  `datacadastro_pes` DATETIME NULL,
  `nome_pes` VARCHAR(100) NULL,
  `sobrenome_pes` VARCHAR(100) NULL,
  `cep_pes` VARCHAR(10) NULL,
  `logradouro_pes` VARCHAR(250) NULL,
  `numero_pes` VARCHAR(10) NULL,
  `bairro_pes` VARCHAR(150) NULL,
  `complemento_pes` VARCHAR(45) NULL,
  `codigo_cid` INT NULL,
  `telefone_pes` VARCHAR(15) NULL,
  `email_pes` VARCHAR(150) NULL,
  `ativo_pes` TINYINT NULL,
  PRIMARY KEY (`codigo_pes`),
  INDEX `fk_pessoa_cidades1_idx` (`codigo_cid` ASC) VISIBLE,
  CONSTRAINT `fk_pessoa_cidades1`
    FOREIGN KEY (`codigo_cid`)
    REFERENCES `cadastro_imoveis`.`cidades` (`codigo_cid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cadastro_imoveis`.`tipo_imovel`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cadastro_imoveis`.`tipo_imovel` ;

CREATE TABLE IF NOT EXISTS `cadastro_imoveis`.`tipo_imovel` (
  `codigo_tpi` INT NOT NULL AUTO_INCREMENT,
  `descricao_tpi` VARCHAR(150) NULL,
  `ativo_tpi` TINYINT(1) NULL,
  PRIMARY KEY (`codigo_tpi`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cadastro_imoveis`.`imovel`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cadastro_imoveis`.`imovel` ;

CREATE TABLE IF NOT EXISTS `cadastro_imoveis`.`imovel` (
  `codigo_imo` INT NOT NULL AUTO_INCREMENT,
  `datacadastro_imo` DATETIME NULL,
  `codigo_tpi` INT NOT NULL,
  `codigo_pes` INT NOT NULL,
  `cep_imo` VARCHAR(10) NULL,
  `logradouro_imo` VARCHAR(250) NULL,
  `numero_pes` VARCHAR(10) NULL,
  `bairro_pes` VARCHAR(150) NULL,
  `complemento_pes` VARCHAR(45) NULL,
  `codigo_cid` INT NOT NULL,
  `ativo_imo` TINYINT(1) NULL,
  INDEX `fk_imovel_tipo_imovel1_idx` (`codigo_tpi` ASC) VISIBLE,
  PRIMARY KEY (`codigo_imo`),
  INDEX `fk_imovel_pessoa1_idx` (`codigo_pes` ASC) VISIBLE,
  INDEX `fk_imovel_cidades1_idx` (`codigo_cid` ASC) VISIBLE,
  CONSTRAINT `fk_imovel_tipo_imovel1`
    FOREIGN KEY (`codigo_tpi`)
    REFERENCES `cadastro_imoveis`.`tipo_imovel` (`codigo_tpi`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_imovel_pessoa1`
    FOREIGN KEY (`codigo_pes`)
    REFERENCES `cadastro_imoveis`.`pessoa` (`codigo_pes`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_imovel_cidades1`
    FOREIGN KEY (`codigo_cid`)
    REFERENCES `cadastro_imoveis`.`cidades` (`codigo_cid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cadastro_imoveis`.`especificacoes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cadastro_imoveis`.`especificacoes` ;

CREATE TABLE IF NOT EXISTS `cadastro_imoveis`.`especificacoes` (
  `codigo_esp` INT NOT NULL AUTO_INCREMENT,
  `codigo_tpi` INT NOT NULL,
  `tipo_esp` TINYINT NULL,
  `descricao_esp` VARCHAR(100) NULL,
  `ativo_esp` TINYINT(1) NULL,
  PRIMARY KEY (`codigo_esp`),
  INDEX `fk_especificacoes_tipo_imovel1_idx` (`codigo_tpi` ASC) VISIBLE,
  CONSTRAINT `fk_especificacoes_tipo_imovel1`
    FOREIGN KEY (`codigo_tpi`)
    REFERENCES `cadastro_imoveis`.`tipo_imovel` (`codigo_tpi`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cadastro_imoveis`.`fotos_imovel`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cadastro_imoveis`.`fotos_imovel` ;

CREATE TABLE IF NOT EXISTS `cadastro_imoveis`.`fotos_imovel` (
  `codigo_fti` INT NOT NULL AUTO_INCREMENT,
  `codigo_imo` INT NOT NULL,
  `caminho_fti` VARCHAR(250) NULL,
  `principal_fti` TINYINT(1) NULL,
  `ativo_fti` TINYINT(1) NULL,
  PRIMARY KEY (`codigo_fti`),
  INDEX `fk_fotos_imovel_imovel1_idx` (`codigo_imo` ASC) VISIBLE,
  CONSTRAINT `fk_fotos_imovel_imovel1`
    FOREIGN KEY (`codigo_imo`)
    REFERENCES `cadastro_imoveis`.`imovel` (`codigo_imo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cadastro_imoveis`.`imovel_especificacoes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cadastro_imoveis`.`imovel_especificacoes` ;

CREATE TABLE IF NOT EXISTS `cadastro_imoveis`.`imovel_especificacoes` (
  `codigo_imo` INT NOT NULL,
  `codigo_esp` INT NOT NULL,
  `valor` VARCHAR(45) NULL,
  INDEX `fk_imovel_has_especificacoes_especificacoes1_idx` (`codigo_esp` ASC) VISIBLE,
  INDEX `fk_imovel_has_especificacoes_imovel1_idx` (`codigo_imo` ASC) VISIBLE,
  CONSTRAINT `fk_imovel_has_especificacoes_imovel1`
    FOREIGN KEY (`codigo_imo`)
    REFERENCES `cadastro_imoveis`.`imovel` (`codigo_imo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_imovel_has_especificacoes_especificacoes1`
    FOREIGN KEY (`codigo_esp`)
    REFERENCES `cadastro_imoveis`.`especificacoes` (`codigo_esp`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `cadastro_imoveis` ;

-- -----------------------------------------------------
-- Placeholder table for view `cadastro_imoveis`.`vwpermissoes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cadastro_imoveis`.`vwpermissoes` (`nome_pag` INT, `link_pag` INT, `codigo_men` INT, `nome_men` INT, `icone_men` INT, `link_men` INT, `ordem_men` INT, `codigo_pag` INT, `codigo_gru` INT, `acesso` INT, `inserir` INT, `alterar` INT, `detalhar` INT, `excluir` INT, `imprimir` INT, `grafico` INT, `codigo_usu` INT);

-- -----------------------------------------------------
-- View `cadastro_imoveis`.`vwpermissoes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cadastro_imoveis`.`vwpermissoes`;
DROP VIEW IF EXISTS `cadastro_imoveis`.`vwpermissoes` ;
USE `cadastro_imoveis`;
CREATE OR REPLACE VIEW `vwpermissoes` AS
select p.nome_pag, p.link_pag, m.*, pg.*, u.codigo_usu
from usuario u
inner join grupo g ON u.codigo_gru = g.codigo_gru
inner join paginas_grupo pg ON g.codigo_gru = pg.codigo_gru
inner join paginas p ON pg.codigo_pag = p.codigo_pag
inner join menu m ON p.codigo_men = m.codigo_men
where pg.acesso = 1;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
